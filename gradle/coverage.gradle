allprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
}
subprojects {
    apply plugin: 'jacoco'

    jacocoTestReport {
        group = "Reporting"
        description = "Generate Jacoco coverage reports after running tests."
        additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)

        reports {
            xml.enabled true
            csv.enabled false
            html.destination "${buildDir}/jacocoHtml"
        }
        afterEvaluate {
            classDirectories = files(classDirectories.files.collect {
                fileTree(dir: it,
                         exclude: [])
            })
        }
    }
}
task jacocoRootReport(type: JacocoReport, group: 'Coverage reports', dependsOn: subprojects.test) {
    description = 'Generates an aggregate report from all subprojects'

    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories = files(files(subprojects.sourceSets.main.output).files.collect {
        fileTree(dir: it, exclude: [])
    })
    executionData = files(subprojects.jacocoTestReport.executionData).filter { it.exists() }

    reports {
        html.enabled = true
        xml.enabled = true
    }
}
task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

task aggregateTestReports(type: Copy, dependsOn: subprojects*.test) {
    copy {
        into "$buildDir/test-results"
        subprojects {
            from "$buildDir/test-results"
        }
    }
}
