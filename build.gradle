apply plugin: 'java'

sourceCompatibility = 1.8
version = '1.0'


allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    group = 'com.flipkart.retail.analytics'
}

subprojects{
    apply plugin: 'java'
    version = '1.0'

    dependencies {
        repositories {
            maven { url 'http://artifactory.nm.flipkart.com:8081/artifactory/libs-releases' }
            maven { url 'http://artifactory.nm.flipkart.com:8081/artifactory/libs-snapshots' }
            maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
            mavenCentral()
            mavenLocal()
        }


        compile 'org.hibernate:hibernate-validator:4.3.10.Final'
        compile 'com.wordnik:swagger-jaxrs_2.9.1:1.3.1'
        compile('mysql:mysql-connector-java:5.1.37')
        compile('io.dropwizard:dropwizard-migrations:0.9.1')
        compile('fk.sp.common:common-extensions:' + commonExtentions)
        compile('fk.sp.common:spring-jpa:' + commonExtentions)
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.6.1"
        compile('flipkart.retail.libraries:dropwizard-admin:5.0.3')

        compile('org.ehcache:jcache:1.0.1')
        compile('org.jsr107.ri:cache-annotations-ri-guice:1.0.0')
        compile 'com.github.spullara.mustache.java:compiler:0.9.2'
        compile('fk.sp.selleranalytics:reports:0.1.5') {
            exclude group: 'flipkart.retail.libraries'
            exclude group: 'fk.sp.common'
            exclude group: 'fk.sp.sa.common'
        }

        testCompile 'org.hsqldb:hsqldb:2.3.1'
        testCompile group: 'junit', name: 'junit', version: '4.11'
        testCompile ('io.dropwizard:dropwizard-testing:1.0.2')
        testCompile 'org.jukito:jukito:1.3'
        testCompile ('fk.sp.common:common-test-extensions:' + commonExtentions){
            exclude group: 'com.codahale.metrics'
        }
        testCompile 'org.skyscreamer:jsonassert:1.2.3'
    }

    configurations {
        all*.exclude group: 'com.sun.jersey' //dropwizard 9 using jersey 2 which has conflicting packages
        all*.exclude group: 'com.yammer.dropwizard' //dropwizard < 7 packages
        all*.exclude group: 'log4j', module: 'log4j'
        all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
        all*.exclude group: 'org.slf4j', module: 'slf4j-simple'
        all*.exclude group: 'org.testng', module: 'testng'
        all*.exclude group: 'org.jadira.usertype', module: 'usertype.jodatime'
        all*.exclude group: 'javax.ws.rs', module: 'jsr311-api'
    }

    // this is required for entity scanning to work correctly while
    // running tests from gradle -
    // http://forums.gradle.org/gradle/topics/regression_with_classloading_in_the_jetty_plugin_with_gradle_1_0_milestone_6
    sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDir
}


buildscript {
    apply from: file('gradle/buildscript.gradle'), to: buildscript
}

task createWrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

apply plugin: 'dropwizard-debian'

dropwizardDebian {
    adminPort = 18003
    jmxPort = 18004
    applicationName = "fk-retail-analytics"
    parentProject = "manager"
    javaOpts = "-Xms1024m -Xmx1024m -XX:MaxPermSize=256m -XX:+UseG1GC -verbose:gc -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+PrintGCDetails -Xloggc:/var/log/flipkart/retail/fk-retail-contract-management/gc.log"
    zip64 = true
    jreVersion = 8;
    enableLogAggregation = true
    enableConfigService = true
    enableEmpujadorConfig = true
}

ext.mainClassName = 'com.flipkart.retail.analytics.AnalyticsManagementApplication'
ext.configFile = '../config/development/config.yaml'
ext.appName = dropwizardDebian.applicationName

apply from: file('gradle/common.gradle')

project ('aggregated-data'){
    dependencies {
        compile project(':data-model')
    }
}

project(':manager') {

    apply plugin: 'java'

    dependencies {
        compile project(':data-model')
        compile project(':aggregated-data')
    }

    test {
        testLogging.showStandardStreams = true
    }

    apply plugin: 'maven-publish'
    dependencies {
//        compile project(':zulu-client')
    }
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }
}
